# TODO: Review whole template.
# TODO: Change instance types from free tier, to the actual required ones.
# TODO: AGW kernel downgrade.

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access into the resources
    Type: AWS::EC2::KeyPair::KeyName

Mappings:
  RegionMap:
    af-south-1:
      Ubuntu2004LTS: "ami-042995beac9ec5140"
    ap-east-1:
      Ubuntu2004LTS: "ami-07b3aa6c08b0caae1"
    ap-northeast-1:
      Ubuntu2004LTS: "ami-0d745f1ee4bb88b89"
    ap-northeast-2:
      Ubuntu2004LTS: "ami-05a5333b72d3d1c93"
    ap-northeast-3:
      Ubuntu2004LTS: "ami-0eb4557358e2c9386"
    ap-south-1:
      Ubuntu2004LTS: "ami-0340ea71c538887c3"
    ap-southeast-1:
      Ubuntu2004LTS: "ami-0fbb51b4aa5671449"
    ap-southeast-2:
      Ubuntu2004LTS: "ami-030a8d0e06463671c"
    ap-southeast-3:
      Ubuntu2004LTS: "ami-029497464bf11fc26"
    ca-central-1:
      Ubuntu2004LTS: "ami-0ab6f6340b2a4fb77"
    cn-north-1:
      Ubuntu2004LTS: "ami-0741e7b8b4fb0001c"
    cn-northwest-1:
      Ubuntu2004LTS: "ami-0883e8062ff31f727"
    eu-central-1:
      Ubuntu2004LTS: "ami-0d0dd86aa7fe3c8a9"
    eu-north-1:
      Ubuntu2004LTS: "ami-051a4a0c60c88f085"
    eu-south-1:
      Ubuntu2004LTS: "ami-0da797cba39f716ea"
    eu-west-1:
      Ubuntu2004LTS: "ami-04e2e94de097d3986"
    eu-west-2:
      Ubuntu2004LTS: "ami-08d3a4ad06c8a70fe"
    eu-west-3:
      Ubuntu2004LTS: "ami-018de3a6e45331551"
    me-central-1:
      Ubuntu2004LTS: "ami-0dd8d47397d44ff85"
    me-south-1:
      Ubuntu2004LTS: "ami-057c0cd91677477f8"
    sa-east-1:
      Ubuntu2004LTS: "ami-07e7afb5e1e58e8da"
    us-east-1:
      Ubuntu2004LTS: "ami-01d08089481510ba2"
    us-east-2:
      Ubuntu2004LTS: "ami-0066d036f9777ec38"
    us-west-1:
      Ubuntu2004LTS: "ami-064562725417500be"
    us-west-2:
      Ubuntu2004LTS: "ami-0e6dff8bde9a09539"

Resources:
  AgwSrsVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      InstanceTenancy: default
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: "AgwSrsVPC"

  S1SrsPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: "us-west-1c"
      MapPublicIpOnLaunch: true
      VpcId: !Ref "AgwSrsVPC"
      Tags:
        - Key: Name
          Value: "S1SrsSubnet - us-west-1c"

  AgwPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: "us-west-1c"
      MapPublicIpOnLaunch: true
      VpcId: !Ref "AgwSrsVPC"
      Tags:
        - Key: Name
          Value: "AgwSubnet - us-west-1c"

  AgwSrsIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: "AgwSrsIGW"

  AgwSrsNetworkACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref "AgwSrsVPC"
      Tags:
        - Key: Name
          Value: "AgwNetworkACL"

  AgwSrsRoutePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref "AgwSrsVPC"
      Tags:
        - Key: Name
          Value: "AgwSrsRoutePublic"

  AGWEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      # ImageId: ami-03f6d497fceb40069
      ImageId:
        Fn::FindInMap:
          - RegionMap
          - !Ref AWS::Region
          - Ubuntu2004LTS
      # KernelId" : String
      KeyName: !Ref KeyName
      Monitoring: false
      UserData: "echo hello world"
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 40
      NetworkInterfaces:
        - NetworkInterfaceId: !Ref AGWSGiNetworkInterface
          DeviceIndex: 0
        - NetworkInterfaceId: !Ref AGWS1NetworkInterface
          DeviceIndex: 1
      Tags:
        - Key: Name
          Value: "AGWEC2Instance"

  AGWSGiNetworkInterface:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: AGW SGi network interface, internet access.
      GroupSet: [!Ref "SGAgw"]
      SubnetId: !Ref AgwPublicSubnet
      Tags:
        - Key: Name
          Value: "AGWS1NetworkInterface"

  EIPSGi:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: "SGi Elastic IP"

  EIPSGiAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt EIPSGi.AllocationId
      NetworkInterfaceId: !Ref AGWSGiNetworkInterface

  AGWS1NetworkInterface:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: AGW S1 network interface.
      GroupSet: [!Ref "SGAgw"]
      SubnetId: !Ref S1SrsPublicSubnet
      Tags:
        - Key: Name
          Value: "AGWS1NetworkInterface"

  SrsEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      # ImageId: ami-03f6d497fceb40069
      ImageId:
        Fn::FindInMap:
          - RegionMap
          - !Ref AWS::Region
          - Ubuntu2004LTS
      KeyName: !Ref KeyName
      Monitoring: false
      UserData: "echo hello world"
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeleteOnTermination: true
          Description: Primary network interface for srs
          DeviceIndex: "0"
          SubnetId: !Ref "S1SrsPublicSubnet"
          GroupSet: [!Ref "SGsrs"]
      Tags:
        - Key: Name
          Value: "SrsEC2Instance"

  SGsrs:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Srs host security group
      VpcId: !Ref "AgwSrsVPC"
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: SrsHostSecurityGroup

  SGAgw:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Srs host security group
      VpcId: !Ref "AgwSrsVPC"
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: SrsHostSecurityGroup

  NACLEntry1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: true
      Protocol: -1
      RuleAction: allow
      RuleNumber: 100
      NetworkAclId: !Ref "AgwSrsNetworkACL"

  NACLEntry2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      Protocol: -1
      RuleAction: allow
      RuleNumber: 100
      NetworkAclId: !Ref "AgwSrsNetworkACL"

  subnetaclS1Srs:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref "AgwSrsNetworkACL"
      SubnetId: !Ref "S1SrsPublicSubnet"

  subnetaclSrs:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref "AgwSrsNetworkACL"
      SubnetId: !Ref "AgwPublicSubnet"

  IGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref "AgwSrsVPC"
      InternetGatewayId: !Ref "AgwSrsIGW"

  subnetRoutePublicS1Srs:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref "AgwSrsRoutePublic"
      SubnetId: !Ref "S1SrsPublicSubnet"

  subnetRoutePublicAgw:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref "AgwSrsRoutePublic"
      SubnetId: !Ref "AgwPublicSubnet"

  publicroute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref "AgwSrsRoutePublic"
      GatewayId: !Ref "AgwSrsIGW"
